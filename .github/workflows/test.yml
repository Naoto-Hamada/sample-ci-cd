name: Node.js CI                       # ワークフローの名前を定義

on:                                    # ワークフローのトリガーを定義
  push:                                # mainブランチへのプッシュ時に実行
    branches: [ "main" ]                 
  pull_request:                        # mainブランチへのプルリクエスト時に実行
    branches: [ "main" ]

jobs:                                  # 実行するジョブを定義
  build:                               # buildという名前のジョブを定義
    runs-on: ubuntu-latest             # Ubuntu最新版で実行
    steps:                             # リポジトリのコードをチェックアウト
      - uses: actions/checkout@v4      # コードを取得
      - name: Use Node.js              # Node.jsのセットアップ
        uses: actions/setup-node@v2
        with:                          # Node.jsのバージョン16を使用
          node-version: 16
      - name: Install dependencies     # 依存関係のインストール
        id: install
        continue-on-error: true        # エラーが発生しても続行
        run: npm install
      - name: Show environment info    # 環境変数とシステム情報の表示
        run: |
          echo "::group::Show environment variables"
          printenv
          echo "::endgroup::"
      - name: Run tests                # テストの実行 
        id: test
        continue-on-error: true        # エラーが発生しても続行
        run: npm test
      - name: Add job summary          # ジョブサマリーの追加
        if: always()                   # 常に実行
        run: |
          echo "## 実行結果サマリー :clipboard:" >> "$GITHUB_STEP_SUMMARY"
          echo "### 依存関係のインストール :package:" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ steps.install.outcome }}" == "success" ]; then
            echo "✅ npm installは正常に完了しました" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "❌ npm installでエラーが発生しました" >> "$GITHUB_STEP_SUMMARY"
            echo "```" >> "$GITHUB_STEP_SUMMARY"
            echo "${{ steps.install.outputs.stderr }}" >> "$GITHUB_STEP_SUMMARY"
            echo "```" >> "$GITHUB_STEP_SUMMARY"
          fi

          echo "### テスト実行結果 :test_tube:" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "✅ テストは正常に完了しました" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "❌ テストでエラーが発生しました" >> "$GITHUB_STEP_SUMMARY"
            echo "```" >> "$GITHUB_STEP_SUMMARY"
            echo "${{ steps.test.outputs.stderr }}" >> "$GITHUB_STEP_SUMMARY"
            echo "```" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Check for errors
        if: always()
        run: |
          if [ "${{ steps.install.outcome }}" != "success" ] || [ "${{ steps.test.outcome }}" != "success" ]; then
            echo "::error::Previous steps contained errors"
            exit 1
          fi

